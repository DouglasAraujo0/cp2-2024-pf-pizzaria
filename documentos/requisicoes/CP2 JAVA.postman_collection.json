{
	"info": {
		"_postman_id": "e5cc8f9a-4c1a-46f7-be64-cf058ca7b787",
		"name": "CP2 JAVA",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33457024"
	},
	"item": [
		{
			"name": "Sabor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"descricao\": \"testando sabores 2\",\n  \"nome\": \"Douglas\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/sabores",
					"host": [
						"localhost"
					],
					"path": [
						"sabores"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Sabor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/sabores",
					"host": [
						"localhost"
					],
					"path": [
						"sabores"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Sabor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/sabores/10",
					"host": [
						"localhost"
					],
					"path": [
						"sabores",
						"10"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Opcional",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\n        \"nome\": \"testeee\",\n        \"id\": null,\n        \"preco\": 23,\n        \"sabor\": {\n            \"id\": 2,\n            \"nome\": \"testandoi\",\n            \"descricao\": null\n        }\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/opcionais",
					"host": [
						"localhost"
					],
					"path": [
						"opcionais"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Opcional",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/opcionais",
					"host": [
						"localhost"
					],
					"path": [
						"opcionais"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Opcional",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/opcionais/6",
					"host": [
						"localhost"
					],
					"path": [
						"opcionais",
						"6"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Produto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"opcionais\": [\n            {\n                \"nome\": \"Fantasdaa\",\n                \"id\": null,\n                \"preco\": 12.99,\n                \"sabor\": {\n                    \"id\": 4,\n                    \"nome\": \"Uva\",\n                    \"descricao\": null\n                }\n            },\n            {\n                \"nome\": \"Fanasdasdta\",\n                \"id\": null,\n                \"preco\": 12.99,\n                \"sabor\": {\n                    \"id\": 6,\n                    \"nome\": \"Laranja\",\n                    \"descricao\": null\n                }\n            },\n            {\n                \"nome\": \"Borda de Catasdasdupiri\",\n                \"id\": null,\n                \"preco\": 9.99,\n                \"sabor\": {\n                    \"id\": 3,\n                    \"nome\": \"Catupiri\",\n                    \"descricao\": null\n                }\n            },\n            {\n                \"nome\": \"Coca-Cola\",\n                \"id\": null,\n                \"preco\": 19.99,\n                \"sabor\": {\n                    \"id\": 5,\n                    \"nome\": \"Cola\",\n                    \"descricao\": null\n                }\n            },\n            {\n                \"nome\": \"Sprite\",\n                \"id\": null,\n                \"preco\": 12.99,\n                \"sabor\": {\n                    \"id\": 2,\n                    \"nome\": \"LimÃ£o\",\n                    \"descricao\": null\n                }\n            }\n        ],\n        \"preco\": 59.99,\n        \"id\": 1,\n        \"sabor\": {\n            \"id\": 1,\n            \"nome\": \"Calabresa\",\n            \"descricao\": \"Saborosa calabresa\"\n        },\n        \"nome\": \"Pizza\"\n    },",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/produtos",
					"host": [
						"localhost"
					],
					"path": [
						"produtos"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Produto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/produtos",
					"host": [
						"localhost"
					],
					"path": [
						"produtos"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Produto",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "SC",
					"host": [
						"SC"
					]
				}
			},
			"response": []
		},
		{
			"name": "Produto",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"opcionais\": [\r\n        {\r\n            \"nome\": \"Fanta\",\r\n            \"id\": null,\r\n            \"preco\": 12.99,\r\n            \"sabor\": {\r\n                \"id\": 4,\r\n                \"nome\": \"Uva\",\r\n                \"descricao\": null\r\n            }\r\n        },\r\n        {\r\n            \"nome\": \"Fanta\",\r\n            \"id\": null,\r\n            \"preco\": 12.99,\r\n            \"sabor\": {\r\n                \"id\": 6,\r\n                \"nome\": \"Laranja\",\r\n                \"descricao\": null\r\n            }\r\n        },\r\n        {\r\n            \"nome\": \"Borda de Catupiri\",\r\n            \"id\": null,\r\n            \"preco\": 9.99,\r\n            \"sabor\": {\r\n                \"id\": 3,\r\n                \"nome\": \"Catupiri\",\r\n                \"descricao\": null\r\n            }\r\n        },\r\n        {\r\n            \"nome\": \"Coca-Cola\",\r\n            \"id\": null,\r\n            \"preco\": 19.99,\r\n            \"sabor\": {\r\n                \"id\": 5,\r\n                \"nome\": \"Coasdasdla\",\r\n                \"descricao\": null\r\n            }\r\n        },\r\n        {\r\n            \"nome\": \"Spasdasdrite\",\r\n            \"id\": null,\r\n            \"preco\": 12.99,\r\n            \"sabor\": {\r\n                \"id\": 2,\r\n                \"nome\": \"LimÃ£oasdasdasdasdasd\",\r\n                \"descricao\": null\r\n            }\r\n        }\r\n    ],\r\n    \"preco\": 59.99,\r\n    \"id\": 3,\r\n    \"sabor\": {\r\n        \"id\": 8,\r\n        \"nome\": \"Calabresa comasdasdasd MuÃ§arela\",\r\n        \"descricao\": \"A combinaÃ§Ã£o peasdasdrfeita da nossa saborosa calabresa com o queijo muÃ§arela de arrancar suspiros\"\r\n    },\r\n    \"nome\": \"Pizasdza\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/produtos/3/opcionais",
					"host": [
						"localhost"
					],
					"path": [
						"produtos",
						"3",
						"opcionais"
					]
				}
			},
			"response": []
		},
		{
			"name": "Produto",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost/produtos/3/opcionais",
					"host": [
						"localhost"
					],
					"path": [
						"produtos",
						"3",
						"opcionais"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pizzaria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"id\": 2,\n        \"nome\": \"Douglass testando\",\n        \"cardapio\": [\n            {\n                \"opcionais\": [\n                    {\n                        \"nome\": \"Fanta\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 4,\n                            \"nome\": \"Uva\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Fanta\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 6,\n                            \"nome\": \"Laranja\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Borda de Catupiri\",\n                        \"id\": null,\n                        \"preco\": 9.99,\n                        \"sabor\": {\n                            \"id\": 3,\n                            \"nome\": \"Catupiri\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Coca-Cola\",\n                        \"id\": null,\n                        \"preco\": 19.99,\n                        \"sabor\": {\n                            \"id\": 5,\n                            \"nome\": \"Cola\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Sprite\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 2,\n                            \"nome\": \"LimÃ£o\",\n                            \"descricao\": null\n                        }\n                    }\n                ],\n                \"preco\": 59.99,\n                \"id\": 2,\n                \"sabor\": {\n                    \"id\": 7,\n                    \"nome\": \"MuÃ§arela\",\n                    \"descricao\": \"Delicionsa muÃ§arela\"\n                },\n                \"nome\": \"Pizza\"\n            },\n            {\n                \"opcionais\": [\n                    {\n                        \"nome\": \"Fanta\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 4,\n                            \"nome\": \"Uva\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Fanta\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 6,\n                            \"nome\": \"Laranja\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Borda de Catupiri\",\n                        \"id\": null,\n                        \"preco\": 9.99,\n                        \"sabor\": {\n                            \"id\": 3,\n                            \"nome\": \"Catupiri\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Coca-Cola\",\n                        \"id\": null,\n                        \"preco\": 19.99,\n                        \"sabor\": {\n                            \"id\": 5,\n                            \"nome\": \"Cola\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Pizasdza\",\n                        \"id\": null,\n                        \"preco\": 59.99,\n                        \"sabor\": {\n                            \"id\": 8,\n                            \"nome\": \"Calabresa com MuÃ§arela\",\n                            \"descricao\": \"A combinaÃ§Ã£o perfeita da nossa saborosa calabresa com o queijo muÃ§arela de arrancar suspiros\"\n                        }\n                    },\n                    {\n                        \"nome\": \"Sprite\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 2,\n                            \"nome\": \"LimÃ£o\",\n                            \"descricao\": null\n                        }\n                    }\n                ],\n                \"preco\": 59.99,\n                \"id\": 3,\n                \"sabor\": {\n                    \"id\": 8,\n                    \"nome\": \"Calabresa com MuÃ§arela\",\n                    \"descricao\": \"A combinaÃ§Ã£o perfeita da nossa saborosa calabresa com o queijo muÃ§arela de arrancar suspiros\"\n                },\n                \"nome\": \"Pizza\"\n            },\n            {\n                \"opcionais\": [\n                    {\n                        \"nome\": \"Fanta\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 4,\n                            \"nome\": \"Uva\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Fanta\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 6,\n                            \"nome\": \"Laranja\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Borda de Catupiri\",\n                        \"id\": null,\n                        \"preco\": 9.99,\n                        \"sabor\": {\n                            \"id\": 3,\n                            \"nome\": \"Catupiri\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Coca-Cola\",\n                        \"id\": null,\n                        \"preco\": 19.99,\n                        \"sabor\": {\n                            \"id\": 5,\n                            \"nome\": \"Cola\",\n                            \"descricao\": null\n                        }\n                    },\n                    {\n                        \"nome\": \"Sprite\",\n                        \"id\": null,\n                        \"preco\": 12.99,\n                        \"sabor\": {\n                            \"id\": 2,\n                            \"nome\": \"LimÃ£o\",\n                            \"descricao\": null\n                        }\n                    }\n                ],\n                \"preco\": 59.99,\n                \"id\": 1,\n                \"sabor\": {\n                    \"id\": 1,\n                    \"nome\": \"Calabresa\",\n                    \"descricao\": \"Saborosa calabresa\"\n                },\n                \"nome\": \"Pizza\"\n            }\n        ]\n    }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/pizzarias",
					"host": [
						"localhost"
					],
					"path": [
						"pizzarias"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Pizzaria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/pizzarias",
					"host": [
						"localhost"
					],
					"path": [
						"pizzarias"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Pizzaria",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost/pizzarias/2",
					"host": [
						"localhost"
					],
					"path": [
						"pizzarias",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pizzaria",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"opcionais\": [\r\n            {\r\n                \"nome\": \"testestessssss\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 4,\r\n                    \"nome\": \"Uva\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Fanta\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 6,\r\n                    \"nome\": \"Laranja\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Borda de Catupiri\",\r\n                \"id\": null,\r\n                \"preco\": 9.99,\r\n                \"sabor\": {\r\n                    \"id\": 3,\r\n                    \"nome\": \"Catupiri\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Coca-Cola\",\r\n                \"id\": null,\r\n                \"preco\": 19.99,\r\n                \"sabor\": {\r\n                    \"id\": 5,\r\n                    \"nome\": \"Cola\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Pizasdza\",\r\n                \"id\": null,\r\n                \"preco\": 59.99,\r\n                \"sabor\": {\r\n                    \"id\": 8,\r\n                    \"nome\": \"Calabresa com MuÃ§arela\",\r\n                    \"descricao\": \"A combinaÃ§Ã£o perfeita da nossa saborosa calabresa com o queijo muÃ§arela de arrancar suspiros\"\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Sprite\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 2,\r\n                    \"nome\": \"LimÃ£o\",\r\n                    \"descricao\": null\r\n                }\r\n            }\r\n        ],\r\n        \"preco\": 59.99,\r\n        \"id\": 3,\r\n        \"sabor\": {\r\n            \"id\": 8,\r\n            \"nome\": \"Calabresa com MuÃ§arela\",\r\n            \"descricao\": \"A combinaÃ§Ã£o perfeita da nossa saborosa calabresa com o queijo muÃ§arela de arrancar suspiros\"\r\n        },\r\n        \"nome\": \"Pizza\"\r\n    },\r\n    {\r\n        \"opcionais\": [\r\n            {\r\n                \"nome\": \"Fanta\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 4,\r\n                    \"nome\": \"Uva\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Fanta\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 6,\r\n                    \"nome\": \"Laranja\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Borda de Catupiri\",\r\n                \"id\": null,\r\n                \"preco\": 9.99,\r\n                \"sabor\": {\r\n                    \"id\": 3,\r\n                    \"nome\": \"Catupiri\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Coca-Cola\",\r\n                \"id\": null,\r\n                \"preco\": 19.99,\r\n                \"sabor\": {\r\n                    \"id\": 5,\r\n                    \"nome\": \"Cola\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Sprite\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 2,\r\n                    \"nome\": \"LimÃ£o\",\r\n                    \"descricao\": null\r\n                }\r\n            }\r\n        ],\r\n        \"preco\": 59.99,\r\n        \"id\": 1,\r\n        \"sabor\": {\r\n            \"id\": 1,\r\n            \"nome\": \"Calabresa\",\r\n            \"descricao\": \"Saborosa calabresa\"\r\n        },\r\n        \"nome\": \"Pizza\"\r\n    },\r\n    {\r\n        \"opcionais\": [\r\n            {\r\n                \"nome\": \"Fanta\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 4,\r\n                    \"nome\": \"Uva\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Fanta\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 6,\r\n                    \"nome\": \"Laranja\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Borda de Catupiri\",\r\n                \"id\": null,\r\n                \"preco\": 9.99,\r\n                \"sabor\": {\r\n                    \"id\": 3,\r\n                    \"nome\": \"Catupiri\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Coca-Cola\",\r\n                \"id\": null,\r\n                \"preco\": 19.99,\r\n                \"sabor\": {\r\n                    \"id\": 5,\r\n                    \"nome\": \"Cola\",\r\n                    \"descricao\": null\r\n                }\r\n            },\r\n            {\r\n                \"nome\": \"Sprite\",\r\n                \"id\": null,\r\n                \"preco\": 12.99,\r\n                \"sabor\": {\r\n                    \"id\": 2,\r\n                    \"nome\": \"LimÃ£o\",\r\n                    \"descricao\": null\r\n                }\r\n            }\r\n        ],\r\n        \"preco\": 59.99,\r\n        \"id\": 2,\r\n        \"sabor\": {\r\n            \"id\": 7,\r\n            \"nome\": \"testando2222\",\r\n            \"descricao\": \"Delicionsa muÃ§arela\"\r\n        },\r\n        \"nome\": \"testasdasdasd\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost/pizzarias/2/cardapio",
					"host": [
						"localhost"
					],
					"path": [
						"pizzarias",
						"2",
						"cardapio"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pizzaria",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost/pizzarias/2/cardapio",
					"host": [
						"localhost"
					],
					"path": [
						"pizzarias",
						"2",
						"cardapio"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}